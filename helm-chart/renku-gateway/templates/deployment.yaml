apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "gateway.fullname" . }}-auth
  labels:
    app: {{ template "gateway.name" . }}-auth
    chart: {{ template "gateway.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "gateway.name" . }}-auth
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "gateway.name" . }}-auth
        release: {{ .Release.Name }}
        # The label below enables the gateway to connect to redis
        {{ .Values.global.redis.clientLabel | toYaml | nindent 8 }}
    spec:
      initContainers:
        {{- include "certificates.initContainer" . | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.auth.repository }}:{{ .Values.image.auth.tag }}"
          imagePullPolicy: {{ .Values.image.auth.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
            - name: HOST_NAME
              value: {{ .Values.hostName | default (printf "%s://%s" (include "gateway.protocol" .) .Values.global.renku.domain) | quote }}
            - name: CLI_CLIENT_ID
              value: {{ .Values.cliClientId | default "renku-cli" | quote }}
            - name: CLI_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "gateway.fullname" . }}
                  key: cliClientSecret
            - name: GITLAB_URL
              value: {{ .Values.gitlabUrl | default (printf "%s://%s/gitlab" (include "gateway.protocol" .) .Values.global.renku.domain) | quote }}
            - name: GITLAB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "gateway.fullname" . }}
                  key: gitlabClientSecret
            - name: GITLAB_CLIENT_ID
              value: {{ .Values.gitlabClientId | default .Values.global.gateway.gitlabClientId | quote }}
            - name: KEYCLOAK_URL
              value: {{ .Values.keycloakUrl | default (printf "%s://%s" (include "gateway.protocol" .) .Values.global.renku.domain) | quote }}
              {{ if .Values.global.keycloak.realm }}
            - name: KEYCLOAK_REALM
              value: {{ .Values.global.keycloak.realm | quote }}
              {{ end }}
            - name: GATEWAY_SERVICE_PREFIX
              value: {{ .Values.gatewayServicePrefix | default "/api/" | quote }}
            - name: REDIS_HOST
              value: {{ .Values.global.redis.host | quote }}
            - name: REDIS_IS_SENTINEL
              value: {{ .Values.global.redis.sentinel.enabled | quote }}
            - name: REDIS_MASTER_SET
              value: {{ .Values.global.redis.sentinel.masterSet | quote }}
            - name: REDIS_DB
              value: {{ .Values.global.redis.dbIndex.gateway | quote }}
            - name: REDIS_PORT
              value: {{ .Values.global.redis.port | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.redis.existingSecret }}
                  key: {{ .Values.global.redis.existingSecretPasswordKey }}
            - name: GATEWAY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "gateway.fullname" . }}
                  key: gatewaySecret
            - name: GATEWAY_ALLOW_ORIGIN
              value: {{ .Values.allowOrigin | quote }}
            - name: OIDC_CLIENT_ID
              value: {{ .Values.oidcClientId | default "renku" | quote }}
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "gateway.fullname" . }}
                  key: oidcClientSecret
            - name: OLD_GITLAB_LOGOUT
              value: {{ .Values.oldGitLabLogout | quote }}
            - name: LOGOUT_GITLAB_UPON_RENKU_LOGOUT
              value: {{ .Values.logoutGitLabUponRenkuLogout | quote }}
            - name: WEBHOOK_SERVICE_HOSTNAME
              value: {{ .Values.graph.webhookService.hostname | default (printf "http://%s-graph-webhook-service" .Release.Name ) | quote }}
            {{ if .Values.global.anonymousSessions.enabled }}
            - name: ANONYMOUS_SESSIONS_ENABLED
              value: "true"
            {{ end }}
            # Note that this is ok because we're enforcing HTTPS
            # further up the processing chain.
            - name: OAUTHLIB_INSECURE_TRANSPORT
              value: "1"
            - name: SENTRY_ENABLED
              value: {{ .Values.sentry.enabled | quote }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.dsn }}
            - name: SENTRY_ENVIRONMENT
              value: {{ .Values.sentry.environment }}
            {{- include "certificates.env.python" . | nindent 12 }}
          volumeMounts:
            {{- include "certificates.volumeMounts.system" . | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 2
            failureThreshold: 2
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        {{- include "certificates.volumes" . | nindent 8 }}
