# Default values for the gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global variables
## Shared values/secrets
global:
  ## Set to true if using https
  useHTTPS: false
  ## This section stores common GitLab-related values referred in Renku components
  gitlab:
    enabled: true
    ## The URL path prefix under which gitlab is running.
    ## If GitLab is deployed along side with Renku, it should be equal to 'https://gitlab.'<global.renku.domain>
    url:
    ## The gitlab application ID and secret for Renku gateway
    applicationSecret:
    applicationId:

  gateway:
    ## Client secret of the renku client application registered in
    ## keycloak.
    clientSecret:
    ## Client secret of the renku-cli client application registered in keycloak.
    cliClientSecret:
  renku:
    ## Domain name for the deployed instance of Renku. Most likely
    ## set by parent chart.
    domain: example.local

    ## Set the Keycloak Realm name used by Renku here - the default
    ## value is "Renku" and is set on the application level. You may
    ## override this here if you are using an external Keycloak instance
    ## and want to use an existing realm. If Keycloak is deployed as a
    ## part of Renku DO NOT change this value.
    # keycloak:
    #   realm: Renku

  anonymousSessions:
    ## Set this to true for anonymous notebook sessions.
    enabled: false

  keycloak:
    ## Explicitly set another realm than "renku" here
    realm:

replicaCount: 1

## Set to true to enable the developement mode. This has negative security
## implications and should never be done in a production setting.
development: false

## To protect the backend services from an excessive amount of API calls
## issued by one client, one can enforce rate limits here. The limits apply
## per UI client session (identified by the cookies). For an explanation of
## the different values check out the rate limiting documentation of traefik
## v2.0.
rateLimits:
  ## General rate limit, applies to all /api calls combined.
  general:
    extractorfunc: request.header.cookie
    period: 10s
    average: 20
    burst: 100

## You can restrict here the allowed origins for CORS.
## This can be a single value, a comma-separeted list or *.
# allowOrigin: "*"

## For production deployment, you will need to define the secret key
## This is a random string, used for cryptographic operations on cookies
## use `openssl rand -hex 32`
secretKey:

image:
  name: traefik
  repository: traefik
  tag: 2.1.4
  pullPolicy: IfNotPresent

  ## Define the image for the auth middleware
  auth:
    name: renku/renku-gateway
    repository: renku/renku-gateway
    tag: 'latest'
    pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## The gateway deploys its own redis as a dependency. These values
## do probably not need to be changed.
redis:

  nameOverride: gw-redis

  cluster:
    enabled: false

  usePassword: false

  master:
    persistence:
      enabled: false

  networkPolicy:
    enabled: true
    allowExternal: false

## Settings for the graph services
graph:
  webhookService:
    ## Set the hostname under which the webhook service
    ## can be reached (internally). This will default to
    ## http://<release-name>-webhook-service
    hostname:
  knowledgeGraph:
    ## Set the hostname under which the webhook service
    ## can be reached (internally). This will default to
    ## http://<release-name>-knowledge-graph
    hostname:

core:
  ## Set the hostname under which the core service
  ## can be reached (internally). This will default to
  ## http://<release-name>-core
  hostname:

notebooks:
  hostname:

# GitLab has introduced a new logout behavior in 12.7.0
# which was initially broken and fixed in 12.9.0.
# Set this to 'true' for versions < 12.7.0, leave it to
# 'false' for versions >= 12.9.0.
oldGitLabLogout: false

# For deployments with an external GitLab instance, we don't want to terminate
# a GitLab session when users log out from Renku. By default, we assume that a
# dedicated GitLab instance is deployed, so, logging out from Renku should
# trigger a logout from GitLab.
logoutGitLabUponRenkuLogout: true

# sentry configuration
sentry:
  dsn:
  environment:

# An ingress could be enabled here. Usually the gateway runs
# without its own ingress.
ingress:
  enabled:
